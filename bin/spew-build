#!/bin/bash

GREP_OPTIONS=

set -e

self=$(dirname $(readlink -f $0))

targetdirs=${SPEW_TARGETS:-$self/targets /home/$USER/.spew/targets ./targets}
builddir=$(realpath ${BUILDDIR:-~/.spew/builds})
targets=

for targetdir in $targetdirs; do
	targetdir=$(readlink -f "$targetdir" || echo "$targetdir" )

	[ ! -e "$targetdir" ] && continue

	for target in $(find -L "$targetdir" -name build.sh); do
		name=$(basename $(dirname $(dirname "$target")))
		buf="$name#$(dirname $(dirname $target))"
		echo $targets | grep -q $buf || targets="$buf $targets"
	done
done

targets=$(echo $targets | sort -u)

cmd="$1"
shift
case "$cmd" in
	"list-targets")
		for target in $targets; do
			name=$(echo $target | awk -F'#' '{print $1}')
			path=$(echo $target | awk -F'#' '{print $2}')
			vsns=$(echo $(ls "$path") | sed 's/ /, /g')
			printf "%-20s %-50s (%s)\r\n" "$name" $(echo $path | head -c 50) "$vsns"
		done
		;;

	"list-builds")
		for build in $(find $builddir/$1 -maxdepth 3 -type d 2> /dev/null); do
			name=$(echo $build | sed -E "s#$builddir/?##")
			echo $name | grep -q / || continue
			if echo $name | grep -qP '[^/]*/[^/]*/.*'; then
				echo -e "\t$(echo $name | sed 's#.*/.*/##') -> $(echo $(ls $build) | sed 's/.tar.gz//g;s# #, #')"
			else
				echo -e "\n$name"
			fi
		done
		;;

	"build")
		name=$(echo $1 | awk -F'/' '{print $1}')
		vsn=$(echo $1 | awk -F'/' '{print $2}')

		shift 2 || true

		if [ -z "$name" ] || [ -z "$vsn" ]; then
			echo "usage: $0 build <target>/<vsn>" >&2
			exit 2
		fi


		path=$(echo $targets | grep -o "${name}#[^ ]*" | awk -F'#' '{print $2}')

		srcdir="$path/$vsn"

		buildscript="$srcdir/build.sh"
		if [ ! -e "$buildscript" ]; then
			echo "error: build.sh in $path/$vsn was not found or is not executable" >&2
			exit 2
		fi

		buildid=$(shasum $(find $srcdir -type f -or -type l) | shasum | awk '{print $1}' | head -c 6)
		distdir=$builddir/$name/$vsn/$buildid

		if [ -d "$distdir" ] && [ "-f" != "$2" ]; then
			echo "ERROR: build exists $name/$vsn#$buildid... use -f to overwrite" >&2
			exit 2
		fi

		buildtarget=$(mktemp -d)

		env="SRCDIR=$srcdir \
			http_proxy=$http_proxy \
			BUILDDIR=$buildtarget \
			PATH=/bin:/sbin/:/usr/bin:/usr/sbin:/usr/bin/core_perl/shasum"

		echo "=> Running $buildscript"
		env -i $env "$buildscript" $@

		if [ 0 = $? ]; then
			if [ -d "$srcdir/files" ]; then
				sudo rsync -avh $srcdir/files/ $buildtarget/
			fi

			archive=$(mktemp -u)
			cd $buildtarget
			sudo tar -cf $archive .

			buildref=$name_$vsn_$(shasum $archive | awk '{print $1}' | head -c 6).tar.gz
			echo "=> Build $name/$vsn:$buildref in $buildtarget"
			if [ -d "$distdir/$buildref" ]; then
				echo "info: build $name/$vsn#$buildid/$buildref exists, delete it first to rebuild" >&2
				sudo rm $archive
				exit
			else
				echo "=> Copying $buildtarget -> $distdir/$buildref"
				mkdir -p $distdir
				cp $archive $distdir/$buildref
				sudo rm $archive
				echo "=> Build was successfull"
				exit
			fi
		else
			echo "=> Build failed..."
		fi
		rm -rf "$buildtarget"
		;;

	"delete-build")
		for build in $@; do
			echo "=> Deleting build"
			rm -rf $builddir/$build
		done
		;;

	"run")
		name=$1
		target=$2
		shift 2
		opts="$@"

		[ -z "$name" ] || [ -z "$target" ] && { echo "usage: $0 run <name> <target>/<vsn>" >&2; exit 2; }

		path="$builddir/$target"
		if [ ! -d "$path" ]; then
			echo "error: no builds found for $target ($path)" >&2
			exit 3
		fi

		if [ $(find $path -type f | wc -l) -gt 1 ]; then
			echo "error: multiple builds found... be specific..." >&2
			echo "builds: $(echo $(ls $path))" >&2

			exit 3
		fi

		archive=$(find $path -type f)
		rundir=/tmp/spew-app-$(basename -s .tar.gz $archive)

		echo "=> Extracting $archive to $rundir"
		mkdir -p $rundir
		sudo tar -xf $archive -C $rundir

		if [ ! -x "$rundir/run.sh" ] && [ -z "$opts" ] ; then
			echo "warning: $target/run.sh does not exist or not executable" >&2
			systemd-nspawn \
					-M "$name" \
					-D "$rundir" \
					--link-journal=try-guest \
					--network-bridge br0 \
					--network-veth \
					${opts:---boot }
		else
			systemd-nspawn \
					-M "$name" \
					-D "$rundir" \
					--link-journal=try-guest \
					--network-bridge br0 \
					--network-veth \
					$opts
		fi
		;;

	*)
		echo "usage: $0 list-targets|list-builds|build|delete-build [args]" >&2;
		exit 1
esac
